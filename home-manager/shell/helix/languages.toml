file_watch_support = false

# SVELTE --------------------------
[[language]]
name = "svelte"
comment-token = "//"
block-comment-tokens = {start = "<!--", end = "-->"}


# NIX --------------------------
[[language]]
auto-format = true
language-servers = ["nix"]
name = "nix"

[language.formatter]
command = "nixfmt"

[language-server.nix]
command = "nixd"

# TS -----------------------
[[language]]
name = "typescript"
language-servers = [{ except-features = ["format"], name = "typescript-language-server" }, "eslint"]
roots = ["package-lock.json", "tsconfig.json", ".prettierrc.json"]
formatter = { command = 'prettier', args = ["--parser", "typescript"] }
auto-format = true

[[language]]
name = "tsx"
language-servers = [{ except-features = ["format"], name = "typescript-language-server" }, "eslint"]
formatter = { command = 'prettier', args = ["--parser", "typescript"] }
auto-format = true

[language-server.eslint]
command = "vscode-eslint-language-server"
args = ["--stdio"]

[language-server.eslint.config]
codeActionsOnSave = { mode = "all", "source.fixAll.eslint" = true }
format = { enable = true }
nodePath = ""
quiet = false
rulesCustomizations = []
run = "onType"
validate = "on"
experimental = {}
problems = { shortenToSingleLine = false }

[language-server.eslint.config.codeAction]
disableRuleComment = { enable = true, location = "separateLine" }
showDocumentation = { enable = false }

# RUST --------------------------
[[language]]
name = "rust"

[language.auto-pairs]
"\"" = "\""
"(" = ")"
"<" = ">"
"[" = "]"
"`" = "`"
"{" = "}"

[language-server.rust-analyzer.config]
check.command = "clippy"
procMacro.enable = "false"

# PYTHON --------------------------
[[language]]
name = "python"
auto-format = true
language-servers = ["ruff", "pylsp"]

[language.formatter]
args = ["--line-length", "88", "--quiet", "-"]
command = "black"

# HTML ------------------------------------
[[language]]
name = "html"
formatter = { command = 'prettier', args = ["--parser", "html"] }

# JSON --------------------------
[[language]]
name = "json"
language-servers = [ { name = "vscode-json-language-server", except-features = [ "format" ] }, "biome"]

[language-server.biome]
command = "biome"
args = ["lsp-proxy"]

[language-server.vscode-json-language-server.config.json]
validate = { enable = true }
format = { enable = true }
schemas = [{ fileMatch = ["tsconfig.json", "tsconfig.*.json"], url = "https://json.schemastore.org/tsconfig.json" }, { fileMatch = [ "package.json" ], url = "https://json.schemastore.org/package.json" }]

