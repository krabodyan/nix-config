# SVELTE --------------------------
[[language]]
name = "svelte"
comment-token = "//"
indent = { tab-width = 4, unit = "\t" }
block-comment-tokens = { start = "<!--", end = "-->" }
language-servers = ["svelteserver", "tailwindcss"]
formatter = { command = "prettier", args = ["--parser", "svelte"] }

[language-server.svelteserver.config.configuration.typescript]
inlayHints.parameterTypes.enabled = false
inlayHints.variableTypes.enabled = false
inlayHints.propertyDeclarationTypes.enabled = false
inlayHints.functionLikeReturnTypes.enabled = false
inlayHints.enumMemberValues.enabled = false
inlayHints.parameterNames.enabled = false

[language-server.tailwindcss]
command = "tailwindcss-language-server"
args = ["--stdio"]

# GNU ASM ----------------------

[[language]]
name = "gas"
indent = { tab-width = 4, unit = "\t" }

# TERRAFORM

[language-server.terraform-ls]
command = "terraform-ls"
args = ["serve", "-log-file", "/dev/null"]

# TOML -------------------------

[[language]]
name = "toml"
roots = ["."]
formatter.command = "taplo fmt"

# CPP --------------------------

[[language]]
name = "cpp"
formatter.command = "clang-format"

# NIX --------------------------
[[language]]
language-servers = ["nix"]
name = "nix"

[language.formatter]
command = "alejandra"

[language-server.nix]
command = "nixd"

# TS -----------------------
[[language]]
name = "typescript"
language-servers = ["typescript-language-server"]
roots = ["package-lock.json", "tsconfig.json", ".prettierrc.json"]
formatter = { command = 'prettier', args = ["--parser", "typescript"] }

[[language]]
name = "tsx"
language-servers = ["typescript-language-server"]
formatter = { command = 'prettier', args = ["--parser", "typescript"] }

# RUST --------------------------
[[language]]
name = "rust"

[language.auto-pairs]
"\"" = "\""
"(" = ")"
"<" = ">"
"[" = "]"
"`" = "`"
"{" = "}"
"|" = "|"

[language-server.rust-analyzer.config]
cache.warmup = true
cachePriming.numThreads = 12
numThreads = 12
lru.capacity = 512
cargo.buildScripts.enable = false
cargo.noDeps = true

imports.granularity.group = "module"
imports.preferPrelude = true
references.excludeTests = true
references.excludeImports = true

diagnostics.disabled = ["proc-macro-disabled"]
diagnostics.styleLints.enable = true

assist.expressionFillDefault = "todo"
assist.termSearch.borrowcheck = false
assist.termSearch.fuel = 100
assist.emitMustUse = true

files.excludeDirs = [".git", ".github", "target", "assets", "static", "dist"]
files.watcher = "server"

[language-server.rust-analyzer.config.hover]
show.fields = 10
show.enumVariants = 10
show.traitAssocItems = 10
actions.enable = false
memoryLayout.enable = false
lens.enable = false

[language-server.rust-analyzer.config.check]
command = "clippy"
extraArgs = ["--tests", "--no-deps"]
invocationStrategy = "once"
noDefaultFeatures = true
allTargets = false
allFeatures = false

[language-server.rust-analyzer.config.procMacro]
ignored.tauri_macros = ["command", "generate_handler"]
ignored.async_trait = ["async_trait"]
ignored.tokio_macros = ["main"]
ignored.embassy_executor_macros = ["main"]

[language-server.rust-analyzer.config.completion]
autoAwait.enable = false
autoIter.enable = true
autoimport.enable = true
hideDeprecated = true
postfix.enable = false
autoself.enable = false
callable.snippets = "add_parentheses"
addSemicolonToUnit = false

[language-server.rust-analyzer.config.inlayHints]
maxLength = 15
renderColons = false
implicitDrops.enable = false
implicitSizedBoundHints.enable = false
lifetimeElisionHints.enable = "skip_trivial"
lifetimeElisionHints.useParameterNames = false
closureReturnTypeHints.enable = "with_block"
closureCaptureHints.enable = true
genericParameterHints.lifetime.enable = true
genericParameterHints.type.enable = false
expressionAdjustmentHints.mode = "prefer_prefix"    # prefix | postfix | prefer _
expressionAdjustmentHints.enable = "never"          # always | never | reborrow
expressionAdjustmentHints.hideOutsideUnsafe = false
closingBraceHints.minLines = 15
parameterHints.enable = false
typeHints.enable = true
typeHints.hideClosureInitialization = true
typeHints.hideNamedConstructor = true
rangeExclusiveHints.enable = true
discriminantHints.enable = "fieldless"
bindingModeHints.enable = false

# PYTHON --------------------------
[[language]]
name = "python"
language-servers = ["pyright"]

[language.formatter]
args = ["--line-length", "88", "--quiet", "-"]
command = "black"

# HTML ------------------------------------
[[language]]
name = "html"
formatter = { command = 'prettier', args = ["--parser", "html"] }
# language-servers = [ "html", "tailwindcss" ]

[[language]]
name = "yaml"
file-types = ["yaml", "yml"]
language-servers = ["yaml-language-server"]
formatter = { command = "prettier", args = ["--parser", "yaml"] }

[language-server.yaml-language-server.config.yaml]
schemas.kubernetes = "/*.yaml"
format.enable = true
hover = true
completion = true

# JSON --------------------------
[[language]]
name = "json"
language-servers = ["json", "biome"]

[language-server.json]
command = "vscode-json-language-server"
except-features = ["format"]
args = ["--stdio"]

[language-server.json.config.json]
validate = { enable = true }
format = { enable = true }
schemas = [
  { fileMatch = [
    "tsconfig.json",
    "tsconfig.*.json",
  ], url = "https://json.schemastore.org/tsconfig.json" },
  { fileMatch = [
    "package.json",
  ], url = "https://json.schemastore.org/package.json" },
]

[language-server.biome]
command = "biome"
args = ["lsp-proxy"]
