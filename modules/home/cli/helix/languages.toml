# SVELTE --------------------------
[[language]]
name = "svelte"
comment-token = "//"
indent = { tab-width = 4, unit = "\t" }
block-comment-tokens = { start = "<!--", end = "-->" }
language-servers = ["svelteserver", "tailwindcss"]
formatter = { command = "prettier", args = ["--parser", "svelte"] }

[language-server.svelteserver.config.configuration.typescript]
inlayHints.parameterTypes.enabled = false
inlayHints.variableTypes.enabled = false
inlayHints.propertyDeclarationTypes.enabled = false
inlayHints.functionLikeReturnTypes.enabled = false
inlayHints.enumMemberValues.enabled = false
inlayHints.parameterNames.enabled = false

[language-server.tailwindcss]
command = "tailwindcss-language-server"
args = ["--stdio"]

# GNU ASM ----------------------

[[language]]
name = "gas"
indent = { tab-width = 4, unit = "\t" }

# TERRAFORM

[language-server.terraform-ls]
command = "terraform-ls"
args = ["serve", "-log-file", "/dev/null"]

# TOML -------------------------

[[language]]
name = "toml"
roots = ["."]
formatter.command = "taplo fmt"

# CPP --------------------------

[[language]]
name = "cpp"
formatter.command = "clang-format"

# NIX --------------------------
[[language]]
language-servers = ["nix"]
name = "nix"

[language.formatter]
command = "alejandra"

[language-server.nix]
command = "nixd"

# TS -----------------------
[[language]]
name = "typescript"
language-servers = ["typescript-language-server"]
roots = ["package-lock.json", "tsconfig.json", ".prettierrc.json"]
formatter = { command = 'prettier', args = ["--parser", "typescript"] }

[[language]]
name = "tsx"
language-servers = ["typescript-language-server"]
formatter = { command = 'prettier', args = ["--parser", "typescript"] }

# RUST --------------------------
[[language]]
name = "rust"

[language.auto-pairs]
"\"" = "\""
"(" = ")"
"<" = ">"
"[" = "]"
"`" = "`"
"{" = "}"
"|" = "|"

[language-server.rust-analyzer.config]
cache.warmup = true
cachePriming.numThreads = 12
numThreads = 12
lru.capacity = 512
cargo.buildScripts.enable = false
cargo.noDeps = true

hover.show.fields = 10
hover.show.enumVariants = 10
hover.show.traitAssocItems = 10

hover.actions.enable = false
hover.memoryLayout.enable = false

imports.granularity.group = "module"
imports.preferPrelude = true

check.command = "clippy"
check.extraArgs = ["--tests", "--no-deps"]
check.invocationStrategy = "once"
check.noDefaultFeatures = true
check.allTargets = false
check.allFeatures = false

references.excludeTests = true
references.excludeImports = true

diagnostics.disabled = ["proc-macro-disabled"]
diagnostics.styleLints.enable = true

procMacro.ignored.tauri_macros = ["command", "generate_handler"]
procMacro.ignored.async_trait = ["async_trait"]
procMacro.ignored.tokio_macros = ["main"]
procMacro.ignored.embassy_executor_macros = ["main"]

completion.autoAwait.enable = false
completion.autoIter.enable = false
completion.autoimport.enable = true
completion.hideDeprecated = true
completion.postfix.enable = false
completion.autoself.enable = false
completion.callable.snippets = "add_parentheses"
completion.addSemicolonToUnit = false

inlayHints.maxLength = 8
inlayHints.renderColons = false
inlayHints.implicitDrops.enable = false
inlayHints.implicitSizedBoundHints.enable = false
inlayHints.lifetimeElisionHints.enable = "skip_trivial"
inlayHints.lifetimeElisionHints.useParameterNames = true
inlayHints.closureReturnTypeHints.enable = "with_block"
inlayHints.closureCaptureHints.enable = true
inlayHints.genericParameterHints.lifetime.enable = true
inlayHints.genericParameterHints.type.enable = false
inlayHints.expressionAdjustmentHints.mode = "prefer_prefix"    # prefix | postfix | prefer _
inlayHints.expressionAdjustmentHints.enable = "never"          # always | never | reborrow
inlayHints.expressionAdjustmentHints.hideOutsideUnsafe = false
inlayHints.closingBraceHints.minLines = 15
inlayHints.parameterHints.enable = false
inlayHints.typeHints.enable = true
inlayHints.typeHints.hideClosureInitialization = true
inlayHints.typeHints.hideNamedConstructor = true
inlayHints.rangeExclusiveHints.enable = true
inlayHints.discriminantHints.enable = "fieldless"
inlayHints.bindingModeHints.enable = false

lens.enable = false
assist.expressionFillDefault = ""
assist.termSearch.borrowcheck = false
assist.termSearch.fuel = 100
files.excludeDirs = [".git", ".github", "target", "assets", "static", "dist"]
files.watcher = "server"

# PYTHON --------------------------
[[language]]
name = "python"
language-servers = ["ruff", "pylsp"]

[language.formatter]
args = ["--line-length", "88", "--quiet", "-"]
command = "black"

# HTML ------------------------------------
[[language]]
name = "html"
formatter = { command = 'prettier', args = ["--parser", "html"] }
# language-servers = [ "html", "tailwindcss" ]

# JSON --------------------------
[[language]]
name = "json"
language-servers = ["json", "biome"]

[language-server.json]
command = "vscode-json-language-server"
except-features = ["format"]
args = ["--stdio"]

[language-server.json.config.json]
validate = { enable = true }
format = { enable = true }
schemas = [
  { fileMatch = [
    "tsconfig.json",
    "tsconfig.*.json",
  ], url = "https://json.schemastore.org/tsconfig.json" },
  { fileMatch = [
    "package.json",
  ], url = "https://json.schemastore.org/package.json" },
]

[language-server.biome]
command = "biome"
args = ["lsp-proxy"]
